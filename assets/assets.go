// Code generated by go-bindata.
// sources:
// assets/default.gohtml
// assets/exciton.js
// DO NOT EDIT!

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsDefaultGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x55\x4b\x6f\xe3\x36\x10\xbe\xe7\x57\xcc\x12\x28\xd6\x06\x6c\x29\xbd\x15\xb6\x14\xa0\xc8\xa6\xa8\x83\x7d\x14\x71\x82\xb6\x47\x5a\x1a\x59\xec\x52\xa4\x96\x1c\x69\xd7\x60\xf8\xdf\x0b\x5a\xb2\x22\xc5\x4e\x6f\xe5\x45\xc3\x79\xf3\x9b\x87\x92\x77\x1f\xbe\xdc\x3e\xfe\xfd\xc7\x1d\x94\x54\xc9\x9b\xab\x24\x7c\x40\x72\xb5\x4f\x99\x73\xa2\x80\xe8\x23\x57\x7b\xef\x9d\x1b\x08\x94\x16\xbd\x47\xe5\x1c\xaa\xdc\x7b\x16\x8c\x90\xe7\x37\x57\x00\x00\x9d\xcd\xc6\x6e\xee\xbc\x4f\x2a\x24\x0e\x25\x51\xbd\xc4\x6f\x8d\x68\x53\xf6\xd7\xf2\xe9\xd7\xe5\xad\xae\x6a\x4e\x62\x27\x91\x41\xa6\x15\xa1\xa2\x94\x6d\xee\x52\xcc\xf7\xc8\x3a\x2f\x9d\x65\x56\x72\x63\x91\x52\xf6\xf4\xf8\xdb\xf2\x97\x93\x68\xc7\x2d\x42\x69\xb0\x08\x09\x46\x0f\x68\x75\x63\x32\xb4\x4f\x0f\x1f\x8f\xb9\x1c\x75\x6c\x66\x44\x4d\xdd\x25\x9c\x59\xd1\xa8\x8c\x84\x56\x30\x9b\x83\x1b\xd8\xe1\xc4\x71\xad\xa5\x3c\x14\x42\x4a\xb8\x6d\x2c\xe9\xea\xae\x45\x45\x13\x1d\x51\xc0\x0c\xe8\x50\xa3\x2e\xe0\xbb\x50\xb9\xfe\x1e\x8d\x54\x21\x4d\x53\x60\xa7\x08\x0c\xe6\x60\x90\x1a\xa3\xa0\xe0\xd2\xe2\x7a\xe2\x69\xc8\x63\x64\x3f\x03\x0c\x9f\x05\xd4\xdc\xf0\xca\xc2\xeb\x0c\xc3\xe9\x45\xe9\x89\x78\x7e\x06\x07\xbb\x66\xb7\x93\x68\x57\x5d\xa0\x05\x64\x5c\x65\x28\xf9\x4e\xe2\xc0\xca\x91\xb8\x90\x2b\x68\x54\x8e\x85\x50\x98\x83\x5f\x9f\x39\x6f\xb9\x01\x6c\x09\x52\xc8\x75\xd6\x54\xa8\x28\xca\x0c\x72\xc2\x3e\xbd\xf7\xa3\x64\xdf\xc3\xfc\xdc\x01\xb6\x14\x09\x25\xe8\xed\x47\x45\x7d\xae\xc3\xfd\x25\xd7\x81\xd5\xe5\x7a\xc9\x7f\x8f\x27\xb6\x34\x95\xf9\xc9\x6d\x14\x3d\xaa\x8d\x26\x1d\x2a\x06\xe9\xa9\x62\xaf\x04\xeb\x37\xbb\xc0\x92\x11\x6a\x1f\x59\xe2\x86\xec\x9f\x82\xca\x89\xe6\xa5\xfa\x8f\x43\xaf\xcf\x3a\xe7\xdd\xb6\x73\x38\x84\x1e\xb9\xbe\x54\xeb\xff\x50\x87\x74\xe8\xa0\x99\x45\x6e\xb2\xb2\x53\x5e\x40\xad\xad\x08\xec\x4b\x0e\x8f\x0d\xd4\xcb\x43\x0b\x9d\xc8\xe7\x67\xb8\x3e\x07\x7b\x04\x38\x95\xc2\x46\x42\xe5\xf8\xe3\x4b\xf1\x66\xbc\xd0\xfd\xa7\xdb\xb9\x37\xff\x56\xc5\xfc\x7c\x36\x5f\x07\xa2\x9b\xd8\xb8\x1f\xd9\x7e\xa9\xf4\x63\x4c\x07\x89\x50\x61\x2e\x78\xca\xb8\x94\xec\x38\x84\x29\x23\xfc\x41\x71\x66\x2d\x7b\x99\xf0\xe3\xda\x9a\x3e\xbd\x44\xb1\x2f\x69\x05\x3f\x5f\x5f\xff\xb4\x7e\x55\xc3\x9c\xca\x4b\x82\x8a\x9b\xbd\x50\xab\x31\x2c\xfe\x6a\x20\x77\x3a\x3f\xfc\x2f\x31\xc2\x29\xb4\xa2\x65\xc1\x2b\x21\x0f\x2b\x60\xbf\xa3\x6c\x91\x44\xc6\xe1\x33\x36\xc8\x16\xc0\xb6\xb8\xd7\x08\x4f\x1b\x36\x4e\xad\x87\x2e\xc0\x74\x5a\xbf\x86\xab\x3d\x42\x74\xbb\xdd\x7a\x9f\x48\xa1\xbe\xbe\xc6\x0c\x0c\xca\x94\x1d\x6d\x6c\x89\x48\xac\x5f\xa6\x99\xb5\xb1\x73\x91\xf7\x0c\xe2\x69\x19\x48\x90\xc4\x1b\xe7\xa2\xc7\x40\x78\x9f\xc4\x1d\xe7\x2a\x89\xbb\xc5\x9f\x04\x64\xfa\xd5\x9b\x8b\x16\x44\x9e\x32\x5e\xd7\x0c\x72\x4e\x7c\x59\x35\x46\xea\xaf\x4b\xa3\x35\x1d\x57\xf6\xe6\x43\x58\xd4\x49\x9c\x8b\x76\xba\xae\x9d\x8b\x3e\xa1\xd5\xea\x7e\x0b\xde\xcf\xba\x41\x5b\xc0\x60\xb2\x78\xe9\x7d\x3e\x77\xe0\x5c\xf4\x99\x93\x68\xf1\x01\xbf\x35\x68\xe9\x7e\xfb\x09\xa9\xd4\x79\xb0\xe5\xf3\x35\xf8\xf9\x7a\xe8\xaa\x29\x36\xf7\x01\x9a\x4e\x02\xd6\x64\x29\xfb\xe7\xf4\xf2\x9b\xb3\x3e\x4c\xe2\xee\x6d\x49\xdc\xfd\x1f\xff\x0d\x00\x00\xff\xff\x10\xdf\x16\x3c\x30\x07\x00\x00")

func assetsDefaultGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsDefaultGohtml,
		"assets/default.gohtml",
	)
}

func assetsDefaultGohtml() (*asset, error) {
	bytes, err := assetsDefaultGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/default.gohtml", size: 1840, mode: os.FileMode(420), modTime: time.Unix(1516362139, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsExcitonJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x3a\x5b\x77\xdb\x36\x93\xef\xfa\x15\xa8\x1f\x4a\xb9\x51\xe9\xc6\xbd\xec\xd6\xaa\xf6\x24\xb1\x93\x53\x6f\x9b\xcb\x89\x9d\x5e\x56\x47\x0f\x10\x39\x92\x50\x93\x00\x0b\x80\x76\xb5\x89\xfe\xfb\x77\x06\x17\x12\x20\x69\x4b\xf9\x9a\xaf\x7e\x31\x38\xf7\x19\x0e\x30\x83\xa1\xc6\xab\x9a\x67\x9a\x09\x3e\x5e\x17\x62\x49\x8b\x09\x61\xf9\x84\x64\xb4\x28\x38\xd5\xec\x16\x8e\xc9\xfb\x51\x52\x2b\x20\x4a\x4b\x96\xe9\x64\x3a\x3a\x39\x21\x2f\x1c\x8f\x22\x8c\x13\xbd\x61\x8a\xac\x58\x01\x64\x09\x85\xe0\x6b\xa2\x05\xd1\x1b\x20\xf0\x57\xc6\xb4\xe0\x84\xd3\x12\x54\x45\x33\x40\x4e\xaf\x8d\x34\xea\xb8\x42\x95\xc7\xa3\x51\x26\xb8\xd2\x84\x2b\x32\x23\x89\xe3\x4d\xa6\x23\x4b\x36\xe7\x6a\x41\x66\x24\x78\xf8\xf0\x81\xbc\xdf\x4d\x1b\x26\xb1\xfc\x23\xc2\x7b\xcc\xe5\x05\x99\x11\x96\xfb\xc7\xe7\x56\xee\xf3\x5b\xe0\xfa\x82\x6a\x1a\xe8\xfa\x12\x10\xf8\x65\x4e\x35\x4d\xa6\x23\x23\x31\x35\xdc\x97\x17\xd3\x11\x9a\x6e\xf0\x04\x4a\xa6\x35\xc8\x51\xe3\x88\x91\xf5\xdc\x42\xc7\x18\x2d\x42\xac\x2e\x4d\xe5\x1a\x34\x99\x91\x5c\x64\x75\x09\x5c\xa7\x99\x04\xaa\xe1\xc2\x3d\xbe\x90\x74\x8d\xff\xc7\xc7\xd3\x11\x69\x03\x93\x43\x01\x6b\xaa\x61\x5c\x82\xde\x88\xdc\x4a\x24\x26\xca\x73\x0b\xc2\x48\x58\xe1\x1e\x90\x2e\x19\xcf\xc7\x16\x66\xa4\xed\x46\x84\xcc\x0d\xdf\x11\xcd\x73\x63\xe2\xcf\x4c\x69\xe0\x20\x8f\x26\x16\x9e\x33\x55\x51\x9d\x6d\x0c\xd2\x03\x25\x94\xe2\x16\x62\xfa\x11\x21\x8b\x74\x25\xe4\x73\x9a\x6d\xc6\xde\xba\x89\x31\xe8\x78\x3a\xda\x8d\xda\x50\x68\x49\xb9\x2a\xa8\xb6\x02\xc6\x60\x6d\x3f\x39\x21\xd7\xaf\x2f\x5e\x9f\x11\x5a\x6b\xb1\x46\x91\x54\x03\x11\x9c\x2c\x6b\x56\xe4\x44\xb3\x12\x88\x90\x44\xd6\x1c\x97\x6d\xf8\x8c\x10\x32\x73\xfe\xab\xba\x02\x79\x46\x78\x5d\x14\xd6\xd6\x4a\x8a\x4a\x9d\x39\x2f\x09\x49\x96\xf5\x72\x59\x80\x4a\x26\x24\xc9\x28\xcf\xa0\x78\x66\x00\xed\x33\xf5\x4f\xa2\xac\x84\x82\x1c\xd7\x4f\xb2\x5a\x4a\xe0\xfa\xda\x84\x2e\x99\x78\x61\x39\xac\x68\x5d\xe8\x37\xd2\xbc\x74\x4b\x6b\x96\x6f\x36\x54\x19\x29\x4f\xb4\x63\x21\x09\x9a\x7d\xa5\x69\x59\x99\x87\x6d\x05\xad\x1c\xa6\xae\x65\xad\x50\x80\x81\x2c\xf0\xd5\x4c\x5b\x17\xdf\x5d\x36\x4e\x3a\xff\xac\xd7\x93\xc6\xbb\x24\x07\x4d\x59\x61\x34\xde\x32\xb8\x4b\x16\x21\xff\x33\x58\x09\x09\xef\x78\x21\x68\xbe\x4f\x52\xc4\xf8\x52\xd4\x0a\x06\x03\xec\x6d\x1a\x0e\x32\x2d\xf4\x4f\xb0\x45\x6b\x96\xb5\xc6\x0d\xda\xac\x6c\xe0\x0b\x06\x5c\xff\xd6\x2e\x7f\x37\x4b\x2d\x0b\xc7\x55\x82\xa6\x66\xe9\x05\x62\xba\x95\x9e\xc7\x3f\x18\x2e\x09\x6b\x66\x15\x3c\x91\x80\x49\x95\x5f\x37\x11\x57\x99\x04\xe0\xbf\xb5\x62\x2c\xc0\xf0\xa9\x0d\x5b\x19\x23\x07\x23\xfe\x46\x54\x57\xda\x67\xe8\xa1\xd1\xfa\x75\x03\x50\x0c\x47\xab\x0d\x64\x1c\xb0\x24\x87\x42\x53\xe3\x95\x59\xfd\xde\xac\xfe\xaf\x59\xbd\x14\x39\x24\x3d\x03\xe9\x1a\xae\x71\x1f\x31\xdc\x52\x7b\xd3\xa3\x02\xa9\x98\x49\xb0\xc8\xe2\x37\x52\xac\x25\x28\x35\x6c\xf4\x90\xbd\x05\xf0\xb5\xde\x9c\x8b\xb2\xaa\xb5\xdf\x29\x98\x56\x36\xf7\xb5\xd0\xb4\xe8\xd9\xfa\x13\x6c\x97\x82\xca\xfc\x6f\x25\x52\x86\x51\x88\xb3\x84\xa9\x73\xb3\x47\x19\x5f\xe3\xe3\x8d\x85\x16\x22\xa3\xde\xae\x8c\x6a\x93\x1c\x4d\x1a\xf9\xbc\xc2\xbc\xa9\x80\xea\xfd\x99\xf0\x42\x64\xb5\xea\xc5\xd7\x1b\xdd\x06\xa6\x93\x7d\x51\x98\x9d\x99\x83\x6f\xaa\x2f\xc9\x94\x96\xd6\x91\x48\xd2\x85\xa4\xeb\x9e\x88\x20\xb9\x1a\x29\x27\x5f\x18\x39\x26\x45\x56\x20\x93\x2f\x4e\x22\x39\x3f\x52\xb5\x39\xdf\x50\xbe\x1e\xde\xdd\xfd\xe3\x33\x3a\xc8\xcc\xd9\x35\x70\x94\xfa\x84\x10\x45\xfe\xee\xed\xcf\xb8\xe2\x70\x87\xab\x6e\x50\x5f\xaf\x56\x05\xe3\xf0\xb4\xce\x99\xc0\xe0\x14\x10\xc5\x66\x5f\x16\x9e\x7c\x91\x48\xe0\x39\x48\xc8\x9f\xd5\x2b\xe7\x9e\x55\xd1\xe8\xb0\xd2\xb0\x4b\xb0\xc9\xf4\xde\xe5\x00\x1a\x1f\x4b\x25\xb6\x64\x07\x69\x87\x89\xb7\xd2\x20\x2b\xc9\x38\x7a\x6c\x0b\x87\x39\x44\x1d\xa8\x25\xcc\x28\xaf\x0a\xba\x75\x54\x01\x44\x6f\xa4\xa8\xd7\x9b\x90\x36\xaf\xa5\x49\xc8\xcc\x44\xde\xbc\x63\xca\xd7\x35\x5d\x83\x87\xb4\xb4\x76\x53\xb9\x5c\x08\x20\x98\xc2\x16\xda\xd2\x72\x51\x57\x39\xd5\xd0\x18\x91\x64\x34\xdb\xe0\x96\x0c\xec\xf4\x3a\x03\x08\x64\x37\x66\xef\xb4\x54\x12\x14\xe8\x80\x88\x24\x17\xaf\x5f\x9e\x0b\xae\xb1\xd2\xbb\x6d\x1e\xf8\x23\xee\x4c\x4d\xb1\x1b\x10\x21\x50\x56\x9a\xc5\x44\xf8\xa2\xf2\x48\x24\x48\x29\x64\x48\xc2\x78\x55\xc7\x5a\x19\xbf\xa5\x05\x8b\xe4\x88\xa5\x12\x05\x84\x4e\x0a\x9b\x45\x11\x11\xb7\x90\x56\x52\x45\x6b\x15\x91\xc4\x6f\xcb\x43\x3a\x71\x50\x00\x37\x91\xd5\x06\xd2\x25\xd2\xb4\x28\x42\xaa\x44\xd5\xcb\x92\x45\xe9\xa1\x6a\x55\x01\x0f\x69\xee\x28\xd3\xdd\xa8\x53\x0d\xd1\xfb\x49\x24\xd0\x7c\xab\x74\x00\x0f\x6d\x2b\x20\xd3\x4a\x53\xe9\x62\xe6\x20\x41\x62\xb5\xc4\xd8\x74\x44\xc9\x91\xd8\x27\xa3\x20\x24\xbc\x15\x45\x5d\x7a\x6d\x0e\xbc\x30\xff\x77\x93\xa1\x0d\xd4\xad\x68\x83\xbb\x28\xc3\xcc\xf9\x4b\x97\xc0\x6b\x53\xce\x96\x45\x56\xb0\xec\xc6\x16\xf1\x5a\x01\x26\x50\xf3\x80\x1d\x94\x6c\x9e\x0a\xa0\xb7\x91\x27\x06\x8a\xa5\xbf\x21\x11\x26\x69\xdc\xfa\x36\xe0\xad\x2b\xd7\x5a\x58\x55\x6a\x23\xee\x0e\x71\xa9\xad\xdf\x3d\x97\x92\x3b\xc4\x25\x8b\xd1\x03\xec\x51\x99\xeb\x4b\xb8\x81\xad\x77\xf7\x06\xb6\x15\x96\x5d\xb7\xae\xab\x87\x05\x77\xcb\x47\x5f\x76\xd6\x52\xd8\x64\x0b\x21\x3e\x53\x42\x98\x4b\x89\x38\x1a\x4e\x5d\x5b\xf1\x26\x81\x8a\x15\x42\x99\x31\xdf\x2c\x5d\xf0\x97\x45\x2d\x1b\x58\xb2\xd8\x4d\xba\xc6\x47\x2d\x46\xdf\xf2\xca\xa1\xbb\x11\x70\xdc\xbd\xce\x35\x34\xc9\x9e\xc8\xb5\x41\x0e\xa9\x8e\x3a\x8b\x50\x29\x5d\x0a\x1b\x11\xc3\x69\x9a\x01\xc5\xfe\x1f\x5c\xcb\x28\x0a\xd3\x47\xdb\x4d\x85\x2b\xaf\xe1\x81\x57\xd4\xd4\xe5\x07\x36\x43\x2e\xe9\xda\xbd\x1d\xbb\x74\xe9\x8e\x0f\x2e\xdb\xed\x83\xcf\x65\x5c\x37\x2f\x0f\x1f\xa2\xb3\x57\x8a\x6a\x38\xa9\x9d\x49\x9d\x12\x1f\x06\x6e\x43\xd5\xc6\xed\xf4\x45\x87\xeb\x81\xca\x3c\xe9\x24\x9c\x39\x8c\xbb\xfc\x03\x7d\x69\xc8\x57\xd1\x35\x6c\x98\xed\xe4\x70\x6d\xb6\x66\x4f\x46\xd8\x7c\x47\xdc\xa2\x32\x67\x62\xb2\xc0\x8b\xeb\x22\xa8\xf6\x86\xe6\x7a\x5b\x01\x99\x11\x48\x51\x8e\xb9\x2c\x0b\x49\xc6\x05\x68\xc2\x81\x91\x19\xf9\x6a\x6a\x16\x3f\xf8\xde\x20\xb5\xcd\xac\x81\x3e\x7a\xe4\x6f\xd0\xae\x7d\x40\x49\x8e\x6e\xce\x81\x2d\xa6\x06\xd9\x48\x04\xed\x24\xe2\xe2\x07\xc2\x21\x85\x58\x26\xe8\x40\x66\x63\x26\xb6\x37\x0d\xed\x1c\xb4\x97\x4b\x08\x5b\x91\x31\xa2\x67\xad\x2f\x2d\xb7\xe7\x97\xa0\xea\xc2\xb4\x48\xbb\x69\x83\x32\xe6\x08\x27\xd9\xbb\x6e\xff\xee\x36\xac\x00\x32\x46\xec\x67\x33\xd3\xd5\x85\x32\x03\x77\x2a\xe7\x4d\x85\xce\x80\xd0\xa9\x69\xb5\x1a\x67\xaa\xc8\x97\xd0\xa2\x0a\x03\xee\xe9\xe7\x55\xeb\x4f\xeb\x55\x95\x9a\x24\x56\xbf\x32\xbd\x19\x27\x4f\x92\xe3\xae\xa4\xc6\x3b\x14\x56\xa5\xaa\x5e\x2a\x2d\xc7\x8f\x8f\xa7\x83\x54\xd5\x2d\xaa\x9c\xcb\x6a\xd1\xc5\xa3\xb2\x31\x06\x40\xac\x48\x75\x7b\x4c\x3e\x9b\xcd\x70\xf3\xe6\xb0\x62\x1c\xf2\x84\x7c\xfe\x39\x32\x0f\x06\xc2\xfe\x9d\x9c\x18\x1d\xa2\x80\xb4\x10\xeb\xb1\xac\x26\x28\xa7\xab\xc6\x2a\x42\x63\x51\xbe\xb9\x6d\x0f\x09\x23\xee\x6d\xa1\xa5\xf8\xc6\xc8\x1d\xe3\xb9\xb8\xbb\xcc\xcf\x48\x75\x3b\xe7\x6a\x91\x5e\x5e\x98\x01\x4c\xfc\xb7\x23\x50\x28\x38\x40\xde\x00\x01\x89\x74\xa4\xe2\x8e\x83\xf4\x63\xa4\xd4\xcd\x2a\x7e\x61\x70\xe7\xb4\x4f\x06\x45\x40\x61\x2e\xd7\x4e\x06\xb6\x9a\x0a\xf4\xdc\x8f\xbf\x2e\xfd\x39\xd8\xb1\xba\x1f\xa4\xbe\x6b\x9d\xf0\x1e\xcd\x66\xff\x73\x34\xf1\x5e\x55\x8b\x5e\xa0\x63\x09\xf7\x04\x26\x4a\x8a\x8f\xce\x89\xa1\x17\xd7\x18\x84\xd9\x78\xbb\xc7\xa8\xd1\xf0\xda\xee\x47\xdc\x18\xe6\x1a\xd3\x0a\x69\x89\x24\xe8\x5a\x72\xa7\xcd\x13\x58\xf4\xce\x8d\xe6\x1c\x09\x6e\xf6\x70\x7e\x96\xd1\xa2\x78\x65\xa6\xae\x2f\xcd\x5c\xcf\x8d\x00\x27\x84\xca\xb5\x9b\x2c\x36\x73\xd9\xf1\xfb\x8a\xea\xcd\x19\x49\x4e\x6c\x6a\x9c\x24\xe4\x11\xb9\xbc\x20\x8f\x48\x62\x96\x01\xeb\x19\xf9\xdf\xab\xd7\xaf\x52\xa5\x25\xe3\x6b\xb6\xda\x8e\x51\xdc\xce\xce\xee\xdc\xf1\xe5\x46\xb5\x78\xd2\xdc\x75\x26\x9a\xd3\xd1\xc8\xa1\xd3\xee\x28\x71\x9c\x48\xf8\xb3\x06\xa5\x9f\x72\x56\x9a\x0b\xd0\x0b\x49\x4b\xac\x01\xcd\x50\x19\xa2\x89\x28\x2b\x41\x69\x5a\x9a\xb3\x25\xb5\x93\x2d\x0c\x90\x1d\xdb\xa6\x83\xc2\xda\xf9\x74\xc3\xdd\x1c\xe8\xdd\x70\x25\x82\xbf\xbd\xc7\xa0\x96\xd9\x8c\x47\xd1\xf9\x09\x59\xd1\x42\x01\x3a\x68\xcd\xcb\x99\x7e\x25\x4c\x7d\xf8\x6a\xda\x82\xce\xcd\xd0\xf6\x95\xc8\x11\xf1\x78\x10\x81\x07\xe0\xab\x2b\x32\x23\xa7\x3d\xf4\x35\xfc\xa5\x1d\xef\xd7\x01\xf2\xca\xf4\x20\xe7\xb5\x74\xb8\x6f\x7a\xb8\xa7\x72\xfd\xd8\x21\xbf\x1d\x42\x9e\x3a\xe4\x77\x01\xf2\x8d\x14\x15\x48\xbd\xfd\x85\x16\x35\xe2\xfe\x2b\xc0\x5d\x40\xe1\xd1\x64\x46\xfe\x3b\xc0\x3c\xd5\x5a\xb2\x65\xad\xc1\xb3\x7d\x1f\xb3\xf5\xf0\x8f\xc3\xf0\x3c\xcd\xf3\xf3\x82\x2a\x85\x39\x81\xb8\xc7\x31\x73\x84\x3b\x8d\xf9\x2e\xa8\xa6\x57\xa6\x72\x3e\xfe\x3a\xe6\x0a\x30\xdf\xc4\x3c\x57\x7a\x5b\x18\x1b\xbe\x8d\x39\x1a\x78\x18\x0f\x0c\x51\x63\x74\x18\x8c\x4b\xce\x41\xfe\x78\xfd\xf2\x67\x44\x44\xb1\xa8\xf0\x52\x77\xbe\x61\x45\x8e\xa8\xef\x23\x1e\x05\xd2\xf5\xad\xf8\xaa\xc3\x20\xbc\x35\xf7\x17\xcf\x76\xfa\x38\x42\x55\x05\xcd\x7c\xfe\x9c\x76\x42\x10\x6d\x27\xc4\x7f\xdd\x93\xda\x23\x89\x73\x45\xbf\x15\x42\x5f\x6a\x28\x11\xf5\x6d\xc7\xf9\x77\xef\xcc\x17\x8c\xd3\xef\xa6\xc1\x29\x23\x41\x89\xe2\x16\xde\x50\xbd\x41\x9a\xb1\x14\x42\x4f\x08\xd3\x50\x2a\xbb\xb3\xb0\x6f\x90\x26\xfa\x88\x8a\xfa\x2d\xd7\x4d\x60\x33\x61\x18\x9a\x46\x22\xe8\x23\x1c\x2b\xe8\x34\xc3\x80\xa0\x0e\x35\x37\xd4\x73\xb6\x58\x4c\xe3\x23\x50\x82\x8e\xcf\x40\x7f\xc6\x9c\xd3\xa2\x58\xd2\xec\x66\xcc\x27\xe6\x0b\x92\xb5\xf0\x36\x3c\x4e\x18\x06\xdb\x40\x53\x96\xb7\x43\xa8\xaa\x05\x57\x01\x58\x55\x0d\x58\x55\x08\xc6\x0a\xc2\xe7\xdd\x2f\x42\x0b\x53\xfd\x9b\x42\xe2\x9d\x1a\x24\x24\xef\xfd\x81\x6e\x55\xac\xc8\xac\x77\xf2\xb9\x56\x29\x6f\x0b\x12\xa4\x95\xfd\xac\x70\x61\x0b\xf7\xd8\xd5\xc7\x5d\x43\xad\xaa\x90\x5a\x69\x51\xe1\xd6\xa5\x6b\x73\xa2\xc5\xe4\x56\xf1\x5a\x80\x1b\xb1\xf5\x3e\xc1\x4c\x1b\xa9\x90\xba\x0f\x44\x51\xef\xea\x8b\x76\xe2\x1a\x82\xb3\x64\x42\x3c\xa5\x6f\x12\x7a\x1a\x1b\xa6\xcc\x0f\x4a\x9c\x05\x8e\xb2\x7f\x32\x6f\x74\x59\x98\xba\xc4\xf2\xa6\x44\xd9\xd7\x1a\x72\x9a\x6e\x63\xa0\xce\x58\xca\x95\xa1\x19\x78\x13\x73\xc4\xe3\xfb\x58\xc5\xb9\x14\x7c\xcd\xea\xa6\x53\x98\x47\xb8\x75\x06\xa4\xfa\x1c\x29\x4d\x6f\xd1\xcb\x88\xf6\x95\x97\x56\xbf\x75\x3d\x07\xbc\x3e\xc5\x30\x9e\xf6\xbe\xab\xc5\x3e\xed\xd0\xec\xfb\xab\xac\xbd\xd4\x5f\xb0\xd5\xea\xc2\x8e\x0d\x87\xcb\x6b\xce\x56\xab\x4e\x65\xc5\x3d\x9b\x35\x55\x06\xdb\x63\x0f\xa5\x6d\x7d\xe9\x80\x4f\x07\xc0\x99\x34\x27\x98\x99\xba\x2e\xe2\x13\xc1\x1f\x09\x78\x26\xa0\x05\x69\xe7\x60\xe8\xdd\xc0\x98\x3d\xac\x5a\xda\x39\xf3\xb7\x0b\x75\xc7\x74\xb6\x21\x63\x04\xa7\x61\xa2\x52\x05\x71\xc9\x3d\x6b\x2f\x50\x8d\x7b\x9d\xef\xac\xcf\x6d\xbf\x6b\x85\x85\xdd\xbe\x77\x26\xad\x6a\xb5\x19\x3b\xfe\x00\xbf\x94\x40\x6f\xa6\xf7\xaa\xb6\xd5\xfe\x70\x03\x5e\x5d\x59\x13\x6e\xec\x11\xf6\xa9\x4c\xf1\x9d\xc5\x01\x86\x78\xd2\x4f\x14\x8a\xa8\x79\x69\xd5\xe3\x5e\xb1\x0a\xcc\x11\x8a\xe9\x43\x3e\x7c\x20\x01\xa8\xb7\x87\xee\xb5\x7b\x0d\xda\x45\xef\xd9\xf6\x32\x1f\x1f\xd1\xaa\x3a\x0a\xcc\x72\x57\x06\xd4\x68\xaf\x00\xde\x33\x7b\x75\xe3\x75\xb9\x04\x99\xdc\xa7\xc5\x3b\x3d\xb7\x4c\x8b\x9e\xdc\x61\xb6\x6e\xdd\x7c\xd8\xd8\x81\x97\xbd\x3b\x24\xac\xbe\xef\xfb\x04\x71\x0d\xb6\xf8\x7f\x32\xb0\x81\x9a\x8f\x8a\x6c\xc0\x77\x68\x68\x13\x5a\x55\xc9\xdf\x09\xed\xe9\xa7\x0b\xed\xe9\x9e\xd0\x5a\x5b\xc3\x08\x7c\x6c\x54\x4f\xff\xcd\xa8\x9e\xfe\x43\x51\x8d\xae\x1b\xbd\x63\xc8\x5a\x7b\xb3\x70\x5d\x57\x7a\xbb\xe7\x54\x09\x2e\x28\xad\x2c\x57\x4d\x23\x91\x61\x00\x06\x25\xc5\x17\x96\x9e\x61\xa9\x82\x96\xe4\xfe\xa3\xf9\x3e\x23\xf7\x49\xb7\xa5\xbe\xa3\x60\xaf\xe0\xf0\x1a\xd5\x97\x99\x79\x14\x36\x07\x07\x4a\x0c\x2f\x5f\x0f\x49\xb4\xf6\x1e\x6e\xa6\xbb\x9b\xc5\x9b\xe8\x33\x2f\xd7\x77\x8c\x43\x67\xa8\x47\x76\xc6\x9c\xbb\x9e\x71\x7e\x36\xf5\xf1\x19\xd4\x33\x2e\x4e\xa0\x58\xf2\xfe\x44\x72\xf7\xcd\x81\x14\x42\x30\x26\x92\x4f\xd9\x8f\xcf\xa3\x07\x25\xdb\x97\x12\x0b\xdf\x2b\xb4\xb9\xee\xf6\xa5\xf2\xe0\x26\x7c\x50\x2c\x9b\x1b\x72\x5f\x16\x0b\x2e\xcf\x07\xc9\x0a\x2e\xd5\x7d\x69\xb4\x45\x8e\x7d\x45\xd8\xe7\x68\x78\x15\x1f\xb2\xaf\xc5\x36\x22\x27\xcd\xc1\xb8\x4f\x78\x70\x97\xbf\x6f\x73\x7f\x9c\xb5\xc1\x04\x60\x48\xa0\x41\xc6\x12\x0f\x37\xb6\x3b\x42\x68\x15\xf4\xee\xd1\x4e\xa3\xcb\xd0\x83\x33\x75\x60\x08\x71\x5f\x58\x1e\xd2\xb7\x57\x4f\x30\xc9\x68\xe5\xfb\x9f\x0e\x06\x80\xa6\x88\x2d\x45\xbe\xc5\xe2\x68\xd5\x1c\xb0\x35\xde\xbd\xbb\xbc\xf8\x27\x4e\xad\x70\xa2\xbe\x6f\x8b\xb8\xd9\x7d\x10\xd1\xf0\x76\xed\x7e\x2c\x41\xdc\xef\x72\xdc\xad\x68\x50\x54\x38\x88\x68\xf8\x7b\xf7\x46\xbc\x73\x1d\x47\x93\x4f\xfb\x3b\x57\x37\x79\x7d\x26\xc5\x9d\x02\xe9\x7f\xae\xd3\xdc\x32\xfd\x2c\xf9\x0f\x25\xf8\x53\x3f\x8a\xee\x0c\xfd\x13\x87\x4c\x5a\xb2\x76\xf6\x42\xe5\x9a\xcc\xec\x14\xba\xa2\x52\xc1\xb8\x4f\x02\x6e\xf8\x7c\x5e\x2b\x2d\x4a\x3b\xbd\xf0\x7a\xdf\xdb\x0b\xed\x19\xca\xd9\x19\x1e\x7f\x57\x8e\x7e\xc4\x6a\xa6\x1d\xbb\x21\xa7\x9c\x4f\x57\x5b\x9e\xed\xf5\xeb\x40\x8b\x1b\xbf\x87\xd5\x24\x76\x68\x8f\xd4\xfe\x52\x4b\xe5\x3a\xcd\xca\x76\x7e\x80\xa9\x99\xac\x6d\x09\x49\xce\x82\x91\x8c\x36\x9f\x6a\xc8\x2c\xc8\xc5\x26\xeb\xff\xac\x41\x6e\x6d\x3b\x2b\xe4\x38\x99\x63\xd2\x7d\xe9\x7f\xc1\xcc\xf2\xd9\x51\x42\x1e\xa1\xe6\x14\x45\x5c\x9a\x59\xcb\xd1\xa2\x6d\x43\xcd\x1c\xc8\x08\xef\x7f\x2c\xd3\x1b\x29\xee\xec\x07\x00\x29\x51\x78\x93\x7e\x66\x18\x74\x46\x62\xd1\xc7\xf1\xa7\x8d\x66\xa2\xd7\xf9\xd6\x80\xc4\x73\xe4\xaa\xa4\xa8\x5e\xd1\x12\xfc\xe7\xa0\x4e\xea\xdf\xab\x3d\x13\x65\x49\x79\xde\xaa\xc7\x18\xba\xa1\xc9\x74\x34\xea\x8f\x9a\xdc\x2f\x60\xac\x7f\xd3\xd1\xee\xf8\x5f\x01\x00\x00\xff\xff\x0b\xcc\xe1\x33\xe3\x2e\x00\x00")

func assetsExcitonJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsExcitonJs,
		"assets/exciton.js",
	)
}

func assetsExcitonJs() (*asset, error) {
	bytes, err := assetsExcitonJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/exciton.js", size: 12003, mode: os.FileMode(420), modTime: time.Unix(1516419901, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/default.gohtml": assetsDefaultGohtml,
	"assets/exciton.js": assetsExcitonJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"default.gohtml": &bintree{assetsDefaultGohtml, map[string]*bintree{}},
		"exciton.js": &bintree{assetsExcitonJs, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

