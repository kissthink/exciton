// Code generated by go-bindata.
// sources:
// assets/default.gohtml
// assets/exciton.js
// DO NOT EDIT!

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsDefaultGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x56\x5f\x6f\xe3\x36\x0c\x7f\xef\xa7\xe0\x09\x18\x2e\x01\x12\xbb\x7b\x1b\x92\xa8\xc0\x96\xf6\xb0\x14\xf7\x67\x68\x5a\x6c\x7b\x54\x6c\x3a\xd6\x26\x4b\x39\x8b\xf6\x35\x70\xf5\xdd\x07\xc5\x7f\x12\x3b\xc9\x80\x7b\x38\xbd\x44\x16\xc9\x1f\x29\xfe\x48\x31\x8b\x77\xf7\x5f\x96\xcf\x7f\xff\xf1\x00\x29\x65\xea\xee\x66\xe1\x7f\x40\x09\xbd\xe5\xac\xaa\x64\x02\xc1\x47\xa1\xb7\xce\x55\x55\xb7\x41\x65\xd1\x39\xd4\x55\x85\x3a\x76\x8e\x79\x23\x14\xf1\xdd\x0d\x00\x40\x6d\xb3\xb2\xab\x07\xe7\x16\x19\x92\x80\x94\x68\x37\xc5\xaf\x85\x2c\x39\xfb\x6b\xfa\xf2\xeb\x74\x69\xb2\x9d\x20\xb9\x51\xc8\x20\x32\x9a\x50\x13\x67\xab\x07\x8e\xf1\x16\x59\x8d\x52\x5b\x46\xa9\xc8\x2d\x12\x67\x2f\xcf\x1f\xa6\xbf\xb4\xa2\x8d\xb0\x08\x69\x8e\x89\x0f\x30\x78\x42\x6b\x8a\x3c\x42\xfb\xf2\xf4\xf1\x10\xcb\x41\xc7\x46\xb9\xdc\x51\xfd\xe1\xd7\x28\x29\x74\x44\xd2\x68\x18\x8d\xa1\xea\x8e\xfd\xfa\x26\x75\x6c\xbe\x05\xf8\x1a\x49\x32\x1a\x38\x54\xb0\xba\x9f\x81\xc7\x5e\xdd\x3b\xc7\xc0\xcd\x7b\xfa\x61\xb8\x33\x4a\xed\x13\xa9\x14\x2c\x0b\x4b\x26\x7b\x28\x51\x53\x4f\x47\x26\x30\x02\xda\xef\xd0\x24\x2d\xfe\x89\x2a\x70\xce\x81\xb5\x11\x31\x18\x43\x8e\x54\xe4\x1a\x12\xa1\x2c\xf6\xbd\x75\x71\x9f\xd8\x8f\x00\xfd\xcf\x04\x76\x22\x17\x99\x85\xe1\x8d\xfc\x6a\x44\xbc\xdd\xbc\xbd\x41\x05\x9b\x62\xb3\x51\x68\x67\xb5\xa3\x09\x44\x42\x47\xa8\xc4\x46\x61\x77\x14\x23\x09\xa9\x66\x50\xe8\x18\x13\xa9\x31\x1e\x5e\xdf\xaf\x52\xe4\x80\x25\x01\x87\xd8\x44\x45\x86\x9a\x82\x28\x47\x41\xd8\x84\xf7\xfe\x24\xd8\xf7\x30\x3e\x07\xc0\x92\x02\xa9\x25\x5d\xbf\x54\xd0\xc4\xda\x7d\x1f\x63\xed\x8e\xea\x58\x2f\xe1\x37\xf9\xc4\x92\xfa\x32\xd7\xfb\x3a\xf1\x1e\xec\x72\x43\xc6\x33\x06\xbc\x65\x6c\x20\xb8\x5e\x05\x96\x72\xa9\xb7\x81\x25\x91\x93\xfd\x53\x52\x7a\xa9\xbe\x7a\xfc\x9f\xba\x9e\x9f\x55\xce\xbb\x75\x0d\xd8\xb9\x3e\x81\xbe\xc4\xf5\xff\xa8\x03\xef\x2a\x68\x64\x51\xe4\x51\x5a\x2b\x4f\x60\x67\xac\xf4\xc7\x97\x00\x0f\x05\xd4\xc8\x7d\x09\xb5\xdb\xb7\x37\xb8\x3d\x4f\xf6\x49\xc2\x29\x95\x36\x90\x3a\xc6\xd7\x2f\xc9\x55\x7f\xbe\xfa\xdb\xaf\x73\x34\x77\x8d\x31\x37\x1e\x8d\xe7\x7e\x53\x77\x78\xd8\xb4\x78\xf3\x08\x35\x6d\x4f\x7b\x85\x90\x61\x2c\x05\x67\x42\x29\x76\x68\x42\xce\x08\x5f\x29\x8c\xac\x65\xc7\x17\xe1\xf0\xcc\xf5\xaf\x9e\xa2\xdc\xa6\x34\x83\x9f\x6f\x6f\x7f\x9a\x0f\x38\x8c\x29\xbd\x24\xc8\x44\xbe\x95\x7a\x76\x9a\x16\x77\xd3\x6d\x37\x26\xde\xff\x10\x1f\x7e\x25\x46\xd3\x34\x11\x99\x54\xfb\x19\xb0\xdf\x51\x95\x48\x32\x12\xf0\x19\x0b\x64\x13\x60\x6b\xdc\x1a\x84\x97\x15\x3b\x0d\xad\x49\x9d\x4f\x53\xfb\x5c\xe7\x42\x6f\x11\x82\xe5\x7a\xed\xdc\x42\x49\xfd\xef\x30\x67\x90\xa3\xe2\xec\x60\x63\x53\x44\x62\xcd\xe3\x1b\x59\x1b\x56\x55\xe0\x9f\xc8\xb0\x47\x43\x3b\x02\x9e\x50\xa1\xb0\xf8\x5b\x21\x55\xec\xe7\x46\xeb\xc9\x64\x3b\xa3\x51\xd3\x72\xbd\xfe\x20\x15\xda\xef\xf4\x3b\xf4\xd9\x0e\xa4\x8b\x0e\x9c\x6b\x8a\x62\x58\x08\x07\x94\x36\x15\x47\xa4\x63\x2d\x91\xa4\x83\x24\x78\xf6\x1b\xaf\x5b\x9f\xdc\x2c\xc2\x7a\xda\x2d\x3c\xbd\xcd\xbc\x89\x65\x09\x32\xe6\xdd\xd0\xb8\x5b\x84\xb1\x2c\xfb\xc3\xa8\x3f\x68\x78\xe5\xa7\x4c\xa3\x3f\x81\xa8\x8d\xd9\xce\x2a\xe7\xe6\x5e\xf0\x09\xad\xd1\x8f\x6b\x70\x6e\x54\x9b\x4e\x06\xb3\x6a\x72\xec\x6d\x31\xae\xbc\xc9\x67\x41\xb2\xc4\x27\xfc\x5a\xa0\xa5\xc7\xf5\x27\xa4\xd4\xc4\x1e\x40\x8c\xe7\xe0\xc6\xf3\xae\x6b\xbe\x8b\xa7\xc7\x8e\xa6\xda\x1a\x6c\x1e\x71\xf6\xcf\x39\xfb\x67\x4c\x3c\xae\xaf\x19\xdd\x0d\x1b\xb8\x5f\x40\xe7\x21\x74\x40\x1d\x73\xfd\xfe\x5f\x84\x35\x1d\x8b\xb0\xfe\x1f\xf3\x5f\x00\x00\x00\xff\xff\xbf\x38\xbf\xb4\xd8\x08\x00\x00")

func assetsDefaultGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_assetsDefaultGohtml,
		"assets/default.gohtml",
	)
}

func assetsDefaultGohtml() (*asset, error) {
	bytes, err := assetsDefaultGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/default.gohtml", size: 2264, mode: os.FileMode(420), modTime: time.Unix(1521937992, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsExcitonJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x5a\x5b\x77\xdb\xb6\xb2\x7e\xd7\xaf\x40\xf3\x50\xca\x8d\x4a\x37\xee\xe5\x9c\x5a\xd5\x59\x49\xec\x74\xd5\xa7\xcd\x65\xc5\x4e\x2f\x5b\x4b\x0f\x10\x39\x92\x10\x93\x00\x0b\x80\x52\xb5\x53\xfd\xf7\xbd\x06\x17\x12\x20\x69\xcb\xd9\x3b\x6b\xfb\xc5\xe0\x60\xf0\x61\x66\x38\xc0\x5c\xa8\xf1\xaa\xe6\x99\x66\x82\x8f\xd7\x85\x58\xd2\x62\x42\xb8\x12\xcb\xf7\x13\x92\xd1\xa2\xe0\x54\xb3\x2d\x9c\x90\x0f\xa3\xa4\x56\x40\x94\x96\x2c\xd3\xc9\x74\x64\x58\x52\xb5\x57\x1a\x4a\x32\x23\x7a\xc3\xd4\x74\x34\xca\x04\x57\x9a\xbc\xf8\x2b\x63\x5a\xf0\x17\x5b\xe0\xfa\x92\x6a\x4a\x66\x24\x01\x4b\xfb\x12\x90\xf8\x65\x4e\x35\x4d\xa6\xa3\xd1\xe9\x29\x31\x04\x02\x25\xd3\x1a\xe4\xc8\x8b\x42\xcc\xe2\x17\x96\x3a\xc6\xed\x09\xb1\xe0\x9a\xca\x35\x68\x32\x23\xb9\xc8\xea\x12\xb8\x4e\x33\x09\x54\xc3\xa5\x7b\xfc\x51\xd2\x35\xfe\x1f\x9f\x4c\x47\x84\x34\x78\x39\x14\xb0\xa6\x1a\xc6\x25\xe8\x8d\xc8\x2d\x22\x31\x72\xcf\x2d\x69\x81\x6a\x18\x70\x4f\x48\x97\x8c\xe7\x63\x4b\x33\x68\x87\x11\x21\x73\xb3\xee\x11\xcd\x73\x23\xe2\x2f\x4c\x69\xe0\x20\x1f\x4d\x2c\x3d\x67\xaa\xa2\x3a\xdb\x98\x49\x4f\x94\x50\x8a\x2d\xc4\xfc\x23\x42\x16\xe9\x4a\xc8\x17\x34\xdb\x8c\xbd\x74\x13\x23\xd0\xc9\x74\x74\x18\xb5\xa6\xd0\x92\x72\x55\x50\x6d\x01\xc6\x60\x65\x3f\x3d\x25\x37\xaf\x2f\x5f\x9f\x13\x5a\x6b\xb1\x46\x48\xaa\x81\x08\x4e\x96\x35\x2b\x72\xa2\x59\x09\x44\x48\x22\x6b\x8e\xc3\xd6\x7c\x06\x84\xcc\x9c\xfe\xaa\xae\x40\x9e\x13\x5e\x17\x85\x95\xb5\x92\xa2\x52\xe7\x4e\x4b\x42\x92\x65\xbd\x5c\x16\xa0\x92\x09\x49\x32\xca\x33\x28\x9e\x1b\x42\xfb\x4c\xfd\x93\x28\x2b\xa1\x20\xc7\xf1\xd3\xac\x96\x12\xb8\xbe\x31\xa6\x4b\x26\x1e\x2c\x87\x15\xad\x0b\xfd\x46\x9a\x97\x6e\x79\xcd\xf0\xcd\x86\x2a\x83\xf2\x54\xbb\x25\x24\x41\xb1\xaf\x35\x2d\x2b\xf3\xb0\xaf\xa0\xc5\x61\xea\x46\xd6\x0a\x01\x0c\x65\x81\xaf\x66\xda\xaa\xf8\xee\xaa\x51\xd2\xe9\x67\xb5\x9e\x34\xda\x25\x39\x68\xca\x0a\xb3\xe3\x96\xc1\x2e\x59\x84\xeb\x9f\xc3\x4a\x48\x78\xc7\x0b\x41\xf3\x63\x48\xd1\xc2\x97\xa2\x56\x30\x68\x60\x2f\xd3\xb0\x91\x69\xa1\x7f\x86\x3d\x4a\xb3\xac\xb5\x16\xbc\x1d\x59\xc3\x17\x0c\xb8\xfe\xbd\x1d\xfe\x61\x86\x5a\x16\x6e\x55\x09\x9a\x9a\xa1\x07\x44\x77\x2b\xfd\x1a\xff\x60\x56\x49\x58\x33\xbb\xc1\x53\x09\xe8\x54\xf9\x4d\x63\x71\x95\x49\x00\xfe\x7b\x0b\x63\x09\x66\x9d\xda\xb0\x95\x11\x72\xd0\xe2\x6f\x44\x75\xad\xbd\x87\x3e\xd4\x5a\xbf\x6d\x00\x8a\x61\x6b\xb5\x86\x8c\x0d\x96\xe4\x50\x68\x6a\xb4\x32\xa3\x3f\x9a\xd1\x3f\x9a\xd1\x4b\x91\x43\xd2\x13\x90\xae\xe1\x06\xcf\x11\xc3\x23\x75\xd4\x3d\x2a\x90\x8a\x19\x07\x8b\x24\x7e\x23\xc5\x5a\x82\x52\xc3\x42\x0f\xc9\x5b\x00\x5f\xeb\xcd\x85\x28\xab\x5a\xfb\x93\x82\x6e\x65\x7d\x5f\x0b\x4d\x8b\x9e\xac\x3f\xc3\x7e\x29\xa8\xcc\xff\x23\x47\xca\xd0\x0a\xb1\x97\x30\x75\x61\xce\x28\xe3\x6b\x7c\xbc\xb5\xd4\x42\x64\xd4\xcb\x95\x51\x6d\x9c\xa3\x71\x23\xef\x57\xe8\x37\x15\x50\x7d\xdc\x13\x7e\x14\x59\xad\x7a\xf6\xf5\x42\xb7\x86\xe9\x78\x5f\x64\x66\x27\xe6\xe0\x9b\xea\x23\x99\x58\xd2\x2a\x12\x21\x5d\x4a\xba\xee\x41\x04\xce\xd5\xa0\x9c\x7e\x61\x70\x8c\x8b\xac\x40\x26\x5f\x9c\x46\x38\x3f\x51\xb5\xb9\xd8\x50\xbe\x1e\x3e\xdd\xfd\xeb\x33\xba\xc8\xcc\xdd\x35\x70\x95\x7a\x87\x10\x45\xfe\xee\xed\x2f\x38\xe2\xb0\xc3\x51\xd7\xa8\xaf\x57\xab\x82\x71\x78\x56\xe7\x4c\xa0\x71\x0a\x88\x6c\x73\xcc\x0b\x4f\xbf\x48\x24\xf0\x1c\x24\xe4\xcf\xeb\x95\x53\xcf\x6e\xd1\xec\x61\xd1\x14\x99\x39\x67\xfa\xe0\x7c\x00\x85\x8f\x51\x89\x0d\xd9\x81\xdb\xa1\xe3\xad\x34\xc8\x4a\x32\x8e\x1a\xdb\xc0\x61\x2e\x51\x47\x6a\x19\x33\xca\xab\x82\xee\x1d\x57\x40\xd1\x1b\x29\xea\xf5\x26\xe4\xcd\x6b\x69\x1c\x32\x33\x96\x37\xef\x98\xf2\x75\x4d\xd7\xe0\x29\x2d\xaf\x3d\x54\xce\x17\x02\x0a\xba\xb0\xa5\xb6\xbc\x5c\xd4\x55\x4e\x35\x34\x42\x24\x19\xcd\x36\x78\x24\x03\x39\xfd\x9e\x01\x05\xb2\x5b\x73\x76\x5a\x2e\x09\x0a\x74\xc0\x44\x92\xcb\xd7\x2f\x2f\x04\xd7\x18\xe9\xdd\x31\x0f\xf4\x11\x3b\x13\x53\xec\x01\x44\x0a\x94\x95\x66\x31\x13\xbe\xa8\x3c\x82\x04\x29\x85\x0c\x59\x18\xaf\xea\x78\x57\xc6\xb7\xb4\x60\x11\x8e\x58\x2a\x51\x40\xa8\xa4\xb0\x5e\x14\x31\x71\x4b\x69\x91\x2a\x5a\xab\x88\x25\x7e\x5b\x9e\xd2\xb1\x83\x02\xb8\x8d\xa4\x36\x94\x2e\x93\xa6\x45\x11\x72\x25\xaa\x5e\x96\x2c\x72\x0f\x55\xab\x0a\x78\xc8\xb3\xa3\x4c\x77\xad\x4e\x35\x44\xef\x27\x91\x40\xf3\xbd\xd2\x01\x3d\x94\xad\x80\x4c\x2b\x4d\xa5\xb3\x99\xa3\x04\x8e\xd5\x32\x63\xd2\x11\x39\x47\x62\x9f\xcc\x06\x21\xe3\x56\x14\x75\xe9\x77\x73\xe4\x85\xf9\x7f\x98\x0c\x1d\xa0\x6e\x44\x1b\x3c\x45\x19\x7a\xce\x5f\xba\x04\x5e\x9b\x70\xb6\x2c\xb2\x82\x65\xb7\x36\x88\xd7\x0a\xd0\x81\x9a\x07\xcc\xa0\x64\xf3\x54\x00\xdd\x46\x9a\x18\x2a\x86\xfe\x86\x45\x18\xa7\x71\xe3\x6d\xb0\xb6\xae\x5c\x6a\x61\xb7\x52\x1b\xb1\x7b\x88\x4a\x6d\xfc\xee\xa9\x94\xec\x70\x2e\x59\x8c\xee\x59\x1e\x85\xb9\x3e\xc2\x2d\xec\xbd\xba\xb7\xb0\xaf\x30\xec\xba\x71\x5d\xdd\x0f\xdc\x0d\x1f\x7d\xec\xac\xe5\xb0\xce\x16\x52\xbc\xa7\x84\x34\xe7\x12\xb1\x35\xdc\x76\x6d\xc4\x9b\x04\x5b\xac\x90\xca\x8c\xf8\x66\xe8\x8c\xbf\x2c\x6a\xd9\xd0\x92\xc5\x61\xd2\x15\x3e\x4a\x31\xfa\x92\x57\x6e\xba\x6b\x01\xb7\xba\x97\xb9\x86\x22\xd9\x1b\xb9\x36\x93\x43\x5b\x47\x99\x45\xb8\x29\x5d\x0a\x6b\x11\xb3\xd2\x24\x03\x8a\xfd\x13\x5c\xca\x28\x0a\x93\x47\xdb\x43\x85\x23\xbf\xc3\x3d\xaf\xa8\x89\xcb\xf7\x1c\x86\x5c\xd2\xb5\x7b\x3b\x76\xe8\xdc\x1d\x1f\x9c\xb7\xdb\x07\xef\xcb\x38\x6e\x5e\x1e\x3e\x44\x77\xaf\x14\xd5\xb0\x53\x3b\x91\x3a\x21\x3e\x34\xdc\x86\xaa\x8d\x3b\xe9\x8b\xce\xaa\x7b\x22\xf3\xa4\xe3\x70\xe6\x32\xee\xae\x1f\xc8\x4b\xc3\x75\x15\x5d\xc3\x86\xd9\x4c\x0e\xc7\xe6\x68\xf6\x30\xc2\xe4\x3b\x5a\x2d\x2a\x73\x27\x26\x0b\x2c\x5c\x17\x41\xb4\x37\x3c\x37\xfb\x0a\xc8\x8c\x40\x8a\x38\xa6\x58\x16\x92\x8c\x0b\xd0\x84\x03\x23\x33\xf2\xd5\xd4\x0c\x7e\xf0\xb9\x41\x6a\x93\x59\x43\x7d\xfc\xd8\x57\xd0\x2e\x7d\x40\x24\xc7\x37\xe7\xc0\x16\x53\x33\xd9\x20\x82\x76\x88\x38\xf8\x81\x70\x48\x21\xc6\x04\x1d\x60\x36\x62\x62\x7a\xd3\xf0\xce\x41\x7b\x5c\x42\xd8\x8a\x8c\x71\x7a\xd6\xea\xd2\xae\xf6\xeb\x25\xa8\xba\x30\x29\xd2\x61\xda\x4c\x19\x71\x84\x43\xf6\xaa\xdb\xbf\xdd\x86\x15\x40\xc6\x38\xfb\xd9\xcc\x64\x75\x21\x66\xa0\x4e\xe5\xb4\xa9\x50\x19\x10\x3a\x35\xa9\x56\xa3\x4c\x15\xe9\x12\x4a\x54\xa1\xc1\x3d\xff\xbc\x6a\xf5\x69\xb5\xaa\x52\xe3\xc4\xea\x37\xa6\x37\xe3\xe4\x69\x72\xd2\x45\x6a\xb4\x43\xb0\x2a\x55\xf5\x52\x69\x39\x7e\x72\x32\x1d\xe4\xaa\xb6\xb8\xe5\x5c\x56\x8b\xee\x3c\x6e\x36\x46\x03\x88\x15\xa9\xb6\x27\xe4\xb3\xd9\x0c\x0f\x6f\x0e\x2b\xc6\x21\x4f\xc8\xe7\x9f\xe3\xe2\x41\x43\xd8\xbf\xd3\x53\xb3\x87\x28\x20\x2d\xc4\x7a\x2c\xab\x09\xe2\x74\xb7\xb1\x1b\xa1\xb0\x88\x6f\xaa\xed\x21\x30\xe2\xde\x16\x4a\x8a\x6f\x8c\xec\x18\xcf\xc5\xee\x2a\x3f\x27\xd5\x36\x75\xed\xa3\xf4\xea\xd2\x34\x61\xe2\xbf\x03\x81\x42\xc1\x03\x30\x07\x18\x48\xbc\x8f\xd8\x71\x90\xbe\x95\x94\xba\x7e\xc5\xaf\x0c\x76\x81\x04\x93\x41\x18\x28\x4c\x91\xed\x70\x30\xe5\x54\xa0\xe7\xbe\xef\x75\xe5\xef\xc3\x8e\xe4\x7d\x63\xf5\xd5\xeb\x98\xf9\xd1\x6c\xf6\x7f\x8f\x26\x5e\xb3\x6a\xd1\x33\x78\x8c\x70\x87\x71\x22\xe7\xf8\x68\xdf\x18\x7a\x81\x8d\x40\xe8\x95\xdb\x23\x42\x8d\x86\xc7\xf6\x5c\xe2\x01\x31\xe5\x4c\x0b\xd2\x32\x49\xd0\xb5\xe4\x6e\x37\xcf\x60\xa7\x0f\xae\x45\xe7\x58\xf0\xd0\x87\x7d\xb4\x8c\x16\xc5\x2b\xd3\xce\x7c\x69\xfa\x7b\xae\x15\x38\x21\x54\xae\x5d\x87\xb1\x69\x78\x8e\x3f\x54\x54\x6f\xce\x49\x72\x6a\xdd\xe3\x34\x21\x8f\x6d\x5b\x14\x5d\xf0\x31\x49\x0c\x21\x00\x38\x27\xff\x7f\xfd\xfa\x55\xaa\xb4\x64\x7c\xcd\x56\xfb\x31\x82\x1e\x6c\x27\xcf\x5d\x66\xd6\x13\xcc\xbd\xb3\xeb\xf4\x37\xa7\xa3\x91\xf7\xaf\x6e\x63\x71\x9c\x48\xf8\xb3\x06\xa5\x9f\x71\x56\x9a\x72\xe8\x47\x49\x4b\x8c\x08\x4d\xdb\x16\xa2\xfe\x28\x2b\x41\x69\x5a\x9a\x9b\x26\xb5\x7d\x2e\x34\x93\xed\xed\xa6\x83\x60\x6d\x07\xb8\x59\xdd\x5c\xef\x5d\xa3\x25\x82\xbf\xbd\x43\xa0\x76\xb1\x69\x96\xa2\xf2\x13\xb2\xa2\x85\x82\x93\xa6\x37\x9c\x33\xfd\x4a\x98\x68\xf1\xd5\xb4\x25\x5d\x98\x16\xee\x2b\x91\xe3\xc4\x93\xc1\x09\xbc\x0e\x5f\x5d\x93\x19\x39\xeb\x4d\xdf\xc0\x5f\xda\xad\xfd\x3a\x98\xbc\x36\x19\xc9\x45\x2d\xdd\xdc\x37\xbd\xb9\x67\x72\xfd\xc4\x4d\x7e\x3b\x34\x79\xe6\x26\xbf\x0b\x26\xdf\x48\x51\x81\xd4\xfb\x5f\x69\x51\xe3\xdc\xff\x04\x73\x97\x50\xf8\x69\x32\x23\xff\x1b\xcc\x3c\xd3\x5a\xb2\x65\xad\xc1\x2f\xfb\x3e\x5e\xd6\x9b\x7f\x12\x9a\xe7\x59\x9e\x5f\x14\x54\x29\xf4\x09\x9c\x7b\x12\x2f\x8e\xe6\xce\xe2\x75\x97\x54\xd3\x6b\x13\x47\x9f\x7c\x1d\xaf\x0a\x66\xbe\x89\xd7\x5c\xeb\x7d\x61\x64\xf8\x36\x5e\xd1\xd0\x43\x7b\xa0\x89\x1a\xa1\x43\x63\x5c\x71\x0e\xf2\xa7\x9b\x97\xbf\xe0\x44\x64\x8b\x0a\x4b\xbc\x8b\x0d\x2b\x72\x9c\xfa\x3e\x5a\xa3\x40\xba\x2c\x16\x5f\x75\x68\x84\xb7\xa6\x9a\xf1\xcb\xce\x9e\x44\x53\x55\x41\x33\xef\x3f\x67\x1d\x13\x44\xc7\x09\xe7\xbf\xee\xa1\xf6\x58\x62\x5f\xd1\x6f\x85\xd0\x57\xf6\x4b\xc7\xd9\xb7\x1d\xe5\xdf\xbd\xbb\xba\x44\xfa\x77\xd3\xe0\xae\x91\xa0\x44\xb1\x85\x37\x54\x6f\x90\x67\x2c\x85\xd0\x13\xc2\x34\x94\xca\x9e\x2c\xcc\x22\xa4\xb1\x3e\x4e\x45\xd9\x97\xcb\x2d\x30\xb5\x30\x0b\x9a\xb4\x22\xc8\x2a\xdc\x52\xd0\x69\x86\x06\xc1\x3d\xd4\xdc\x70\xcf\xd9\x62\x31\x8d\x2f\x42\x09\x3a\xbe\x09\xfd\x1d\x73\x41\x8b\x62\x49\xb3\xdb\x31\x9f\x10\x4e\x4b\xb0\x12\x6e\xc3\xeb\x84\xa1\xb1\x0d\x35\x65\x79\xdb\x92\xaa\x5a\x72\x15\x90\x55\xd5\x90\x55\x85\x64\x8c\x23\x7c\xde\xfd\x20\xb4\x30\xb9\x40\x13\x4e\xbc\x52\x83\x8c\xe4\x83\xbf\xd6\xed\x16\x2b\x32\xeb\xdd\x7c\x2e\x71\xca\xdb\xb0\x04\x69\x65\x3f\x32\x5c\xda\x10\x3e\x76\x51\xf2\xd0\x70\xab\x2a\xe4\x56\x5a\x54\x78\x74\xe9\xda\xdc\x68\x31\xbb\xdd\x78\x2d\xc0\x35\xdc\x7a\x1f\x64\xa6\x0d\x2a\xa4\xee\x73\x51\x94\xc9\xfa\xd0\x9d\xb8\xb4\xe0\x3c\x99\x10\xcf\xe9\x53\x85\xde\x8e\xcd\xa2\xcc\xb7\x4d\x9c\x04\x8e\xb3\x7f\x33\x6f\x74\x59\x98\xb8\xc4\xf2\x26\x44\xd9\xd7\x1a\xae\x34\x39\xc7\x40\x9c\xb1\x9c\x2b\xc3\x33\xf0\x26\xe6\x38\x8f\xef\x63\x15\xfb\x52\xf0\x6d\xab\xeb\x4e\xa1\x1f\xe1\xd1\x19\x40\xf5\x3e\x52\x9a\x0c\xa3\xe7\x11\xed\x2b\x2f\xed\xfe\x56\xf5\x1c\xb0\x98\x8a\x69\x3c\xed\x7d\x65\x8b\x75\x3a\xa0\xd8\x77\x47\x59\x5b\xe2\x5f\xb2\xd5\xea\xd2\x36\x11\x87\xc3\x2b\x9e\xd6\xd7\xcb\xf7\xe1\xf7\xc7\x35\xe8\x17\x36\xf9\x7b\xbe\xbf\xca\xc7\x3e\x4b\x38\x69\x8f\x45\xce\x56\xab\x4e\x38\xc6\x83\x9e\x35\xa1\x09\x33\x6c\x4f\xa5\x6d\x50\xea\x90\xcf\x06\xc8\x99\x34\xd7\x9e\x69\xdc\x2e\xe2\x6b\xc4\xdf\x23\x78\x91\xa0\x04\x69\xe7\x36\xe9\x15\x71\xcc\xde\x70\x2d\xef\x9c\xf9\x02\x45\xed\x98\xce\x36\x64\x8c\xe4\x34\xf4\x6e\xaa\x20\x8e\xd3\xe7\x6d\x0d\xd6\xa8\xd7\xf9\x54\xeb\xac\x65\xc1\xc2\x82\xc1\x2b\x93\x56\xb5\xda\x8c\xdd\xfa\x60\x7e\x29\x81\xde\x4e\xef\xdc\xda\xa6\x08\x0f\x17\xe0\xd5\xb5\x15\xe1\xd6\xde\x7b\x9f\x4a\x14\x9f\x8e\x3c\x40\x10\xcf\xfa\x89\x4c\x11\x65\x3c\xed\xf6\x78\xc0\xec\x06\xe6\xde\x45\xf7\x21\x7f\xff\x4d\x02\x52\xef\xe0\x75\xe5\x76\x6e\x1f\x24\xe4\xb6\xac\x40\x68\x5b\x26\x78\x15\x6c\x99\xc7\xeb\x72\x09\x32\xb9\x0b\xce\x6b\x37\xb7\x8b\x16\x3d\xdc\x3b\xa4\x18\x88\xaa\xaf\x97\xef\x07\x5e\xdf\xe1\x21\x86\xf2\xe9\xdf\x27\xb0\x54\x70\x68\x3f\x89\xa9\x02\xbc\x8f\xb2\x55\x28\xc7\x27\x37\xd6\xd9\xa7\x33\xd6\xd9\xdd\xc6\xfa\x58\x3b\x9d\xfd\x9b\x76\x3a\xfb\xd4\x76\x8a\x2a\x83\xde\xe1\xb7\x62\xdd\x2e\x5c\x82\x94\x6e\x8f\x9c\xe5\xa0\x96\x68\xb1\x5c\xe0\x8b\x20\x43\x4d\x07\x91\xe2\xda\xa2\x27\x58\xaa\xa0\x65\xb9\xfb\x42\xbc\x4b\xc8\x63\xe8\x36\x2a\x77\x36\x38\x0a\x1c\x56\x3c\x7d\xcc\xcc\x4f\x61\x1c\x7f\x20\x62\x58\x27\xdd\x87\x68\xe5\x7d\xb8\x98\xae\x8c\x8a\x8f\xc5\x67\x1e\xd7\x27\x77\x43\x17\x9a\x9f\xec\xf4\x27\x0f\x3d\xe1\x7c\x33\xe9\xe3\x3d\xa8\x27\x5c\xec\x40\x31\xf2\x71\x47\x72\xa5\xe1\x80\x0b\x21\x19\x1d\xc9\xbb\xec\xc7\xfb\xd1\xbd\xc8\xf6\xa5\xc4\xe0\x47\x41\x9b\xca\xb4\x8f\xca\x83\xa2\xf5\x41\xb6\x6c\x8a\xd9\x3e\x16\x0b\xea\xdc\x07\x61\x05\xf5\x6f\x1f\x8d\xb6\x93\x63\x7f\x99\x1f\x53\x34\xac\x9a\x87\xe4\x6b\x67\x1b\xc8\x49\x73\x03\x1e\x03\x0f\xca\xee\xbb\x0e\xf7\xc7\x49\x1b\x14\xeb\x43\x80\x66\x32\x46\x7c\xb8\xb0\xdd\x6a\xbf\xdd\xa0\x57\xf2\xba\x1d\x9d\x87\x3e\xd8\x53\x07\xfa\x05\x77\x99\xe5\xbe\xfd\x8e\xee\x13\x34\x1d\x5a\x7c\xff\x9b\xbf\x80\xd0\x24\x94\x4b\x91\xef\x31\x0a\xda\x6d\x1e\x70\x34\xde\xbd\xbb\xba\xfc\x6f\xdc\x5a\x61\x0b\xfc\xd8\x11\x71\x0d\xf7\xc0\xa2\x61\x21\xec\x7e\xe5\x40\xdc\x0f\x6a\x5c\x2d\x32\x08\x15\xf6\x0c\x9a\xf5\xbd\x12\x0f\x2b\x9d\x93\xa8\x49\x69\x8b\x37\xd7\x24\x7d\x2e\xc5\x4e\x81\xf4\xbf\xb3\x69\x0a\x42\xdf\xf6\x7d\xaf\x04\x7f\xe6\x7b\xc7\x9d\x2e\x7d\xe2\x26\x93\x96\xad\xad\x07\xa9\x5c\x93\x99\x6d\x18\x57\x54\x2a\x18\xf7\x59\xc0\xf5\x89\x2f\x6a\xa5\x45\x69\x1b\x0d\x7e\xdf\x0f\xb6\x8c\x3c\x47\x9c\x83\x59\xe3\xcb\xda\xe8\xd7\xa7\xa6\x31\x71\x18\x52\xca\xe9\x74\xbd\xe7\xd9\x51\xbd\x1e\x28\x71\xa3\xf7\xf0\x36\x89\xed\xb2\x23\xb7\x2f\x25\xa9\x5c\xa7\x59\xd9\x96\xfa\xe8\x9a\xc9\xda\x86\x90\xe4\x3c\xe8\x9e\x68\xf3\x6d\x85\xcc\x02\x5f\x6c\xbc\xfe\xcf\x1a\xe4\xde\x26\xa8\x42\x8e\x93\x39\x3a\xdd\x97\xfe\xb7\xc6\x2c\x9f\x3d\x4a\xc8\x63\xdc\x39\x45\x88\x2b\xd3\x16\x79\xb4\x48\x4e\xa2\xaf\x88\x06\xbc\xff\x95\x4b\x6f\xa4\xd8\xd9\x5e\xbd\x94\x08\xde\xb8\x9f\xe9\xdb\x9c\x93\x18\xfa\x24\xfe\x16\xd1\x34\xdf\x3a\x9f\x05\x90\x79\x8e\xab\x2a\x29\xaa\x57\xb4\x04\xff\xfd\xa6\xe3\xfa\x77\xee\x9e\x89\xb2\xa4\x3c\x6f\xb7\x47\x1b\xba\xfe\xc6\x74\x34\xea\x77\x85\xdc\x4f\x57\xac\x7e\xd3\xd1\xe1\xe4\x5f\x01\x00\x00\xff\xff\xf1\xe6\x00\x8d\xf0\x2d\x00\x00")

func assetsExcitonJsBytes() ([]byte, error) {
	return bindataRead(
		_assetsExcitonJs,
		"assets/exciton.js",
	)
}

func assetsExcitonJs() (*asset, error) {
	bytes, err := assetsExcitonJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/exciton.js", size: 11760, mode: os.FileMode(420), modTime: time.Unix(1521783537, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/default.gohtml": assetsDefaultGohtml,
	"assets/exciton.js": assetsExcitonJs,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"default.gohtml": &bintree{assetsDefaultGohtml, map[string]*bintree{}},
		"exciton.js": &bintree{assetsExcitonJs, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

